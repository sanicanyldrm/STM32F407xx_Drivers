
STM32_F407xx_CDD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000798  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000920  08000920  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000920  08000920  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  08000920  08000920  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000920  08000920  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000920  08000920  00001920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000924  08000924  00001924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08000928  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          0000001c  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00002004  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009e6  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002f2  00000000  00000000  00002a1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000086  00000000  00000000  00002dd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001a74  00000000  00000000  00002e56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000109d  00000000  00000000  000048ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00006911  00000000  00000000  00005967  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000c278  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0000c2bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007b  00000000  00000000  0000c508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000908 	.word	0x08000908

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	08000908 	.word	0x08000908

080001c8 <GPIO_Init>:
 * @return			- void
 *
 * @notes			-
 *****************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b086      	sub	sp, #24
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0; //temp register
 80001d0:	2300      	movs	r3, #0
 80001d2:	617b      	str	r3, [r7, #20]


	//enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	2101      	movs	r1, #1
 80001da:	4618      	mov	r0, r3
 80001dc:	f000 f994 	bl	8000508 <GPIO_PeriClockControl>

	//1. configure the mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	795b      	ldrb	r3, [r3, #5]
 80001e4:	2b03      	cmp	r3, #3
 80001e6:	d821      	bhi.n	800022c <GPIO_Init+0x64>
	{
		//non-interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	795b      	ldrb	r3, [r3, #5]
 80001ec:	461a      	mov	r2, r3
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	791b      	ldrb	r3, [r3, #4]
 80001f2:	005b      	lsls	r3, r3, #1
 80001f4:	fa02 f303 	lsl.w	r3, r2, r3
 80001f8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing the related bit fields
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	681a      	ldr	r2, [r3, #0]
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	791b      	ldrb	r3, [r3, #4]
 8000204:	4619      	mov	r1, r3
 8000206:	2303      	movs	r3, #3
 8000208:	408b      	lsls	r3, r1
 800020a:	43db      	mvns	r3, r3
 800020c:	4619      	mov	r1, r3
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	400a      	ands	r2, r1
 8000214:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	6819      	ldr	r1, [r3, #0]
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	697a      	ldr	r2, [r7, #20]
 8000222:	430a      	orrs	r2, r1
 8000224:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000226:	2300      	movs	r3, #0
 8000228:	617b      	str	r3, [r7, #20]
 800022a:	e0ca      	b.n	80003c2 <GPIO_Init+0x1fa>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	795b      	ldrb	r3, [r3, #5]
 8000230:	2b04      	cmp	r3, #4
 8000232:	d117      	bne.n	8000264 <GPIO_Init+0x9c>
		{
			//1. configure the falling trigger selection register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000234:	4b4a      	ldr	r3, [pc, #296]	@ (8000360 <GPIO_Init+0x198>)
 8000236:	68db      	ldr	r3, [r3, #12]
 8000238:	687a      	ldr	r2, [r7, #4]
 800023a:	7912      	ldrb	r2, [r2, #4]
 800023c:	4611      	mov	r1, r2
 800023e:	2201      	movs	r2, #1
 8000240:	408a      	lsls	r2, r1
 8000242:	4611      	mov	r1, r2
 8000244:	4a46      	ldr	r2, [pc, #280]	@ (8000360 <GPIO_Init+0x198>)
 8000246:	430b      	orrs	r3, r1
 8000248:	60d3      	str	r3, [r2, #12]
			//clear the corresponding rising trigger selection register
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800024a:	4b45      	ldr	r3, [pc, #276]	@ (8000360 <GPIO_Init+0x198>)
 800024c:	689b      	ldr	r3, [r3, #8]
 800024e:	687a      	ldr	r2, [r7, #4]
 8000250:	7912      	ldrb	r2, [r2, #4]
 8000252:	4611      	mov	r1, r2
 8000254:	2201      	movs	r2, #1
 8000256:	408a      	lsls	r2, r1
 8000258:	43d2      	mvns	r2, r2
 800025a:	4611      	mov	r1, r2
 800025c:	4a40      	ldr	r2, [pc, #256]	@ (8000360 <GPIO_Init+0x198>)
 800025e:	400b      	ands	r3, r1
 8000260:	6093      	str	r3, [r2, #8]
 8000262:	e035      	b.n	80002d0 <GPIO_Init+0x108>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	795b      	ldrb	r3, [r3, #5]
 8000268:	2b05      	cmp	r3, #5
 800026a:	d117      	bne.n	800029c <GPIO_Init+0xd4>
		{
			//1. configure the rising trigger selection register
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800026c:	4b3c      	ldr	r3, [pc, #240]	@ (8000360 <GPIO_Init+0x198>)
 800026e:	689b      	ldr	r3, [r3, #8]
 8000270:	687a      	ldr	r2, [r7, #4]
 8000272:	7912      	ldrb	r2, [r2, #4]
 8000274:	4611      	mov	r1, r2
 8000276:	2201      	movs	r2, #1
 8000278:	408a      	lsls	r2, r1
 800027a:	4611      	mov	r1, r2
 800027c:	4a38      	ldr	r2, [pc, #224]	@ (8000360 <GPIO_Init+0x198>)
 800027e:	430b      	orrs	r3, r1
 8000280:	6093      	str	r3, [r2, #8]
			//clear the corresponding falling trigger selection register
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000282:	4b37      	ldr	r3, [pc, #220]	@ (8000360 <GPIO_Init+0x198>)
 8000284:	68db      	ldr	r3, [r3, #12]
 8000286:	687a      	ldr	r2, [r7, #4]
 8000288:	7912      	ldrb	r2, [r2, #4]
 800028a:	4611      	mov	r1, r2
 800028c:	2201      	movs	r2, #1
 800028e:	408a      	lsls	r2, r1
 8000290:	43d2      	mvns	r2, r2
 8000292:	4611      	mov	r1, r2
 8000294:	4a32      	ldr	r2, [pc, #200]	@ (8000360 <GPIO_Init+0x198>)
 8000296:	400b      	ands	r3, r1
 8000298:	60d3      	str	r3, [r2, #12]
 800029a:	e019      	b.n	80002d0 <GPIO_Init+0x108>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	795b      	ldrb	r3, [r3, #5]
 80002a0:	2b06      	cmp	r3, #6
 80002a2:	d115      	bne.n	80002d0 <GPIO_Init+0x108>
		{
			//1. configure both falling trigger selection register and rising trigger selection register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002a4:	4b2e      	ldr	r3, [pc, #184]	@ (8000360 <GPIO_Init+0x198>)
 80002a6:	68db      	ldr	r3, [r3, #12]
 80002a8:	687a      	ldr	r2, [r7, #4]
 80002aa:	7912      	ldrb	r2, [r2, #4]
 80002ac:	4611      	mov	r1, r2
 80002ae:	2201      	movs	r2, #1
 80002b0:	408a      	lsls	r2, r1
 80002b2:	4611      	mov	r1, r2
 80002b4:	4a2a      	ldr	r2, [pc, #168]	@ (8000360 <GPIO_Init+0x198>)
 80002b6:	430b      	orrs	r3, r1
 80002b8:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002ba:	4b29      	ldr	r3, [pc, #164]	@ (8000360 <GPIO_Init+0x198>)
 80002bc:	689b      	ldr	r3, [r3, #8]
 80002be:	687a      	ldr	r2, [r7, #4]
 80002c0:	7912      	ldrb	r2, [r2, #4]
 80002c2:	4611      	mov	r1, r2
 80002c4:	2201      	movs	r2, #1
 80002c6:	408a      	lsls	r2, r1
 80002c8:	4611      	mov	r1, r2
 80002ca:	4a25      	ldr	r2, [pc, #148]	@ (8000360 <GPIO_Init+0x198>)
 80002cc:	430b      	orrs	r3, r1
 80002ce:	6093      	str	r3, [r2, #8]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	791b      	ldrb	r3, [r3, #4]
 80002d4:	089b      	lsrs	r3, r3, #2
 80002d6:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	791b      	ldrb	r3, [r3, #4]
 80002dc:	f003 0303 	and.w	r3, r3, #3
 80002e0:	74bb      	strb	r3, [r7, #18]

		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4a1f      	ldr	r2, [pc, #124]	@ (8000364 <GPIO_Init+0x19c>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d04d      	beq.n	8000388 <GPIO_Init+0x1c0>
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	4a1d      	ldr	r2, [pc, #116]	@ (8000368 <GPIO_Init+0x1a0>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d032      	beq.n	800035c <GPIO_Init+0x194>
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a1c      	ldr	r2, [pc, #112]	@ (800036c <GPIO_Init+0x1a4>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d02b      	beq.n	8000358 <GPIO_Init+0x190>
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a1a      	ldr	r2, [pc, #104]	@ (8000370 <GPIO_Init+0x1a8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d024      	beq.n	8000354 <GPIO_Init+0x18c>
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	4a19      	ldr	r2, [pc, #100]	@ (8000374 <GPIO_Init+0x1ac>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d01d      	beq.n	8000350 <GPIO_Init+0x188>
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	4a17      	ldr	r2, [pc, #92]	@ (8000378 <GPIO_Init+0x1b0>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d016      	beq.n	800034c <GPIO_Init+0x184>
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	4a16      	ldr	r2, [pc, #88]	@ (800037c <GPIO_Init+0x1b4>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d00f      	beq.n	8000348 <GPIO_Init+0x180>
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	4a14      	ldr	r2, [pc, #80]	@ (8000380 <GPIO_Init+0x1b8>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d008      	beq.n	8000344 <GPIO_Init+0x17c>
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	4a13      	ldr	r2, [pc, #76]	@ (8000384 <GPIO_Init+0x1bc>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d101      	bne.n	8000340 <GPIO_Init+0x178>
 800033c:	2308      	movs	r3, #8
 800033e:	e024      	b.n	800038a <GPIO_Init+0x1c2>
 8000340:	2300      	movs	r3, #0
 8000342:	e022      	b.n	800038a <GPIO_Init+0x1c2>
 8000344:	2307      	movs	r3, #7
 8000346:	e020      	b.n	800038a <GPIO_Init+0x1c2>
 8000348:	2306      	movs	r3, #6
 800034a:	e01e      	b.n	800038a <GPIO_Init+0x1c2>
 800034c:	2305      	movs	r3, #5
 800034e:	e01c      	b.n	800038a <GPIO_Init+0x1c2>
 8000350:	2304      	movs	r3, #4
 8000352:	e01a      	b.n	800038a <GPIO_Init+0x1c2>
 8000354:	2303      	movs	r3, #3
 8000356:	e018      	b.n	800038a <GPIO_Init+0x1c2>
 8000358:	2302      	movs	r3, #2
 800035a:	e016      	b.n	800038a <GPIO_Init+0x1c2>
 800035c:	2301      	movs	r3, #1
 800035e:	e014      	b.n	800038a <GPIO_Init+0x1c2>
 8000360:	40013c00 	.word	0x40013c00
 8000364:	40020000 	.word	0x40020000
 8000368:	40020400 	.word	0x40020400
 800036c:	40020800 	.word	0x40020800
 8000370:	40020c00 	.word	0x40020c00
 8000374:	40021000 	.word	0x40021000
 8000378:	40021400 	.word	0x40021400
 800037c:	40021800 	.word	0x40021800
 8000380:	40021c00 	.word	0x40021c00
 8000384:	40022000 	.word	0x40022000
 8000388:	2300      	movs	r3, #0
 800038a:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 800038c:	4b5b      	ldr	r3, [pc, #364]	@ (80004fc <GPIO_Init+0x334>)
 800038e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000390:	4a5a      	ldr	r2, [pc, #360]	@ (80004fc <GPIO_Init+0x334>)
 8000392:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000396:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000398:	7c7a      	ldrb	r2, [r7, #17]
 800039a:	7cbb      	ldrb	r3, [r7, #18]
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	fa02 f103 	lsl.w	r1, r2, r3
 80003a2:	4a57      	ldr	r2, [pc, #348]	@ (8000500 <GPIO_Init+0x338>)
 80003a4:	7cfb      	ldrb	r3, [r7, #19]
 80003a6:	3302      	adds	r3, #2
 80003a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ac:	4b55      	ldr	r3, [pc, #340]	@ (8000504 <GPIO_Init+0x33c>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	7912      	ldrb	r2, [r2, #4]
 80003b4:	4611      	mov	r1, r2
 80003b6:	2201      	movs	r2, #1
 80003b8:	408a      	lsls	r2, r1
 80003ba:	4611      	mov	r1, r2
 80003bc:	4a51      	ldr	r2, [pc, #324]	@ (8000504 <GPIO_Init+0x33c>)
 80003be:	430b      	orrs	r3, r1
 80003c0:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 80003c2:	2300      	movs	r3, #0
 80003c4:	617b      	str	r3, [r7, #20]
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	799b      	ldrb	r3, [r3, #6]
 80003ca:	461a      	mov	r2, r3
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	791b      	ldrb	r3, [r3, #4]
 80003d0:	005b      	lsls	r3, r3, #1
 80003d2:	fa02 f303 	lsl.w	r3, r2, r3
 80003d6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing the related bit fields
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	689a      	ldr	r2, [r3, #8]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	4619      	mov	r1, r3
 80003e4:	2303      	movs	r3, #3
 80003e6:	408b      	lsls	r3, r1
 80003e8:	43db      	mvns	r3, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	400a      	ands	r2, r1
 80003f2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	6899      	ldr	r1, [r3, #8]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	697a      	ldr	r2, [r7, #20]
 8000400:	430a      	orrs	r2, r1
 8000402:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000404:	2300      	movs	r3, #0
 8000406:	617b      	str	r3, [r7, #20]
	//3. configure the pupd setting
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	79db      	ldrb	r3, [r3, #7]
 800040c:	461a      	mov	r2, r3
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	791b      	ldrb	r3, [r3, #4]
 8000412:	005b      	lsls	r3, r3, #1
 8000414:	fa02 f303 	lsl.w	r3, r2, r3
 8000418:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing the related bit fields
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	68da      	ldr	r2, [r3, #12]
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	791b      	ldrb	r3, [r3, #4]
 8000424:	4619      	mov	r1, r3
 8000426:	2303      	movs	r3, #3
 8000428:	408b      	lsls	r3, r1
 800042a:	43db      	mvns	r3, r3
 800042c:	4619      	mov	r1, r3
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	400a      	ands	r2, r1
 8000434:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	68d9      	ldr	r1, [r3, #12]
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	697a      	ldr	r2, [r7, #20]
 8000442:	430a      	orrs	r2, r1
 8000444:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000446:	2300      	movs	r3, #0
 8000448:	617b      	str	r3, [r7, #20]
	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	7a1b      	ldrb	r3, [r3, #8]
 800044e:	461a      	mov	r2, r3
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	791b      	ldrb	r3, [r3, #4]
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing the related bit fields
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	685a      	ldr	r2, [r3, #4]
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	791b      	ldrb	r3, [r3, #4]
 8000464:	4619      	mov	r1, r3
 8000466:	2301      	movs	r3, #1
 8000468:	408b      	lsls	r3, r1
 800046a:	43db      	mvns	r3, r3
 800046c:	4619      	mov	r1, r3
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	400a      	ands	r2, r1
 8000474:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	6859      	ldr	r1, [r3, #4]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	697a      	ldr	r2, [r7, #20]
 8000482:	430a      	orrs	r2, r1
 8000484:	605a      	str	r2, [r3, #4]

	//5. configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	795b      	ldrb	r3, [r3, #5]
 800048a:	2b02      	cmp	r3, #2
 800048c:	d131      	bne.n	80004f2 <GPIO_Init+0x32a>
	{
		//configure the alternate function registers
		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) / 8;
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	791b      	ldrb	r3, [r3, #4]
 8000492:	08db      	lsrs	r3, r3, #3
 8000494:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) % 8;
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	f003 0307 	and.w	r3, r3, #7
 800049e:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF<< (4 * temp2));
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	7c3a      	ldrb	r2, [r7, #16]
 80004a6:	3208      	adds	r2, #8
 80004a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004ac:	7bfb      	ldrb	r3, [r7, #15]
 80004ae:	009b      	lsls	r3, r3, #2
 80004b0:	220f      	movs	r2, #15
 80004b2:	fa02 f303 	lsl.w	r3, r2, r3
 80004b6:	43db      	mvns	r3, r3
 80004b8:	4618      	mov	r0, r3
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	7c3a      	ldrb	r2, [r7, #16]
 80004c0:	4001      	ands	r1, r0
 80004c2:	3208      	adds	r2, #8
 80004c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	7c3a      	ldrb	r2, [r7, #16]
 80004ce:	3208      	adds	r2, #8
 80004d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	7a5b      	ldrb	r3, [r3, #9]
 80004d8:	461a      	mov	r2, r3
 80004da:	7bfb      	ldrb	r3, [r7, #15]
 80004dc:	009b      	lsls	r3, r3, #2
 80004de:	fa02 f303 	lsl.w	r3, r2, r3
 80004e2:	4618      	mov	r0, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	7c3a      	ldrb	r2, [r7, #16]
 80004ea:	4301      	orrs	r1, r0
 80004ec:	3208      	adds	r2, #8
 80004ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 80004f2:	bf00      	nop
 80004f4:	3718      	adds	r7, #24
 80004f6:	46bd      	mov	sp, r7
 80004f8:	bd80      	pop	{r7, pc}
 80004fa:	bf00      	nop
 80004fc:	40023800 	.word	0x40023800
 8000500:	40013800 	.word	0x40013800
 8000504:	40013c00 	.word	0x40013c00

08000508 <GPIO_PeriClockControl>:
 * @return			- void
 *
 * @notes			-
 *****************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000508:	b480      	push	{r7}
 800050a:	b083      	sub	sp, #12
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
 8000510:	460b      	mov	r3, r1
 8000512:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE)
 8000514:	78fb      	ldrb	r3, [r7, #3]
 8000516:	2b01      	cmp	r3, #1
 8000518:	d15e      	bne.n	80005d8 <GPIO_PeriClockControl+0xd0>
	{
		if(pGPIOx == GPIOA)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4a60      	ldr	r2, [pc, #384]	@ (80006a0 <GPIO_PeriClockControl+0x198>)
 800051e:	4293      	cmp	r3, r2
 8000520:	d106      	bne.n	8000530 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000522:	4b60      	ldr	r3, [pc, #384]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000524:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000526:	4a5f      	ldr	r2, [pc, #380]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000528:	f043 0301 	orr.w	r3, r3, #1
 800052c:	6313      	str	r3, [r2, #48]	@ 0x30
		{
			GPIOI_PCLK_DI();
		}

	}
}
 800052e:	e0b1      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOB)
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	4a5d      	ldr	r2, [pc, #372]	@ (80006a8 <GPIO_PeriClockControl+0x1a0>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d106      	bne.n	8000546 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000538:	4b5a      	ldr	r3, [pc, #360]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800053a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800053c:	4a59      	ldr	r2, [pc, #356]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800053e:	f043 0302 	orr.w	r3, r3, #2
 8000542:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000544:	e0a6      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOC)
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	4a58      	ldr	r2, [pc, #352]	@ (80006ac <GPIO_PeriClockControl+0x1a4>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d106      	bne.n	800055c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800054e:	4b55      	ldr	r3, [pc, #340]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000550:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000552:	4a54      	ldr	r2, [pc, #336]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000554:	f043 0304 	orr.w	r3, r3, #4
 8000558:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800055a:	e09b      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOD)
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4a54      	ldr	r2, [pc, #336]	@ (80006b0 <GPIO_PeriClockControl+0x1a8>)
 8000560:	4293      	cmp	r3, r2
 8000562:	d106      	bne.n	8000572 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000564:	4b4f      	ldr	r3, [pc, #316]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000566:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000568:	4a4e      	ldr	r2, [pc, #312]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800056a:	f043 0308 	orr.w	r3, r3, #8
 800056e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000570:	e090      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOE)
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	4a4f      	ldr	r2, [pc, #316]	@ (80006b4 <GPIO_PeriClockControl+0x1ac>)
 8000576:	4293      	cmp	r3, r2
 8000578:	d106      	bne.n	8000588 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800057a:	4b4a      	ldr	r3, [pc, #296]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800057c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800057e:	4a49      	ldr	r2, [pc, #292]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000580:	f043 0310 	orr.w	r3, r3, #16
 8000584:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000586:	e085      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOF)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	4a4b      	ldr	r2, [pc, #300]	@ (80006b8 <GPIO_PeriClockControl+0x1b0>)
 800058c:	4293      	cmp	r3, r2
 800058e:	d106      	bne.n	800059e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000590:	4b44      	ldr	r3, [pc, #272]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000592:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000594:	4a43      	ldr	r2, [pc, #268]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000596:	f043 0320 	orr.w	r3, r3, #32
 800059a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800059c:	e07a      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOG)
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	4a46      	ldr	r2, [pc, #280]	@ (80006bc <GPIO_PeriClockControl+0x1b4>)
 80005a2:	4293      	cmp	r3, r2
 80005a4:	d106      	bne.n	80005b4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80005a6:	4b3f      	ldr	r3, [pc, #252]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005aa:	4a3e      	ldr	r2, [pc, #248]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005ac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80005b0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005b2:	e06f      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOH)
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	4a42      	ldr	r2, [pc, #264]	@ (80006c0 <GPIO_PeriClockControl+0x1b8>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d106      	bne.n	80005ca <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80005bc:	4b39      	ldr	r3, [pc, #228]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005c0:	4a38      	ldr	r2, [pc, #224]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005c2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80005c6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005c8:	e064      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
			GPIOI_PCLK_EN();
 80005ca:	4b36      	ldr	r3, [pc, #216]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005ce:	4a35      	ldr	r2, [pc, #212]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005d0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80005d4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005d6:	e05d      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		if(pGPIOx == GPIOA)
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	4a31      	ldr	r2, [pc, #196]	@ (80006a0 <GPIO_PeriClockControl+0x198>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d106      	bne.n	80005ee <GPIO_PeriClockControl+0xe6>
			GPIOA_PCLK_DI();
 80005e0:	4b30      	ldr	r3, [pc, #192]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005e4:	4a2f      	ldr	r2, [pc, #188]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005e6:	f023 0301 	bic.w	r3, r3, #1
 80005ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80005ec:	e052      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOB)
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	4a2d      	ldr	r2, [pc, #180]	@ (80006a8 <GPIO_PeriClockControl+0x1a0>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d106      	bne.n	8000604 <GPIO_PeriClockControl+0xfc>
			GPIOB_PCLK_DI();
 80005f6:	4b2b      	ldr	r3, [pc, #172]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fa:	4a2a      	ldr	r2, [pc, #168]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 80005fc:	f023 0302 	bic.w	r3, r3, #2
 8000600:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000602:	e047      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOC)
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	4a29      	ldr	r2, [pc, #164]	@ (80006ac <GPIO_PeriClockControl+0x1a4>)
 8000608:	4293      	cmp	r3, r2
 800060a:	d106      	bne.n	800061a <GPIO_PeriClockControl+0x112>
			GPIOC_PCLK_DI();
 800060c:	4b25      	ldr	r3, [pc, #148]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800060e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000610:	4a24      	ldr	r2, [pc, #144]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000612:	f023 0304 	bic.w	r3, r3, #4
 8000616:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000618:	e03c      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOD)
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	4a24      	ldr	r2, [pc, #144]	@ (80006b0 <GPIO_PeriClockControl+0x1a8>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d106      	bne.n	8000630 <GPIO_PeriClockControl+0x128>
			GPIOD_PCLK_DI();
 8000622:	4b20      	ldr	r3, [pc, #128]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000626:	4a1f      	ldr	r2, [pc, #124]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000628:	f023 0308 	bic.w	r3, r3, #8
 800062c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800062e:	e031      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOE)
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	4a20      	ldr	r2, [pc, #128]	@ (80006b4 <GPIO_PeriClockControl+0x1ac>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d106      	bne.n	8000646 <GPIO_PeriClockControl+0x13e>
			GPIOE_PCLK_DI();
 8000638:	4b1a      	ldr	r3, [pc, #104]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800063a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800063c:	4a19      	ldr	r2, [pc, #100]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800063e:	f023 0310 	bic.w	r3, r3, #16
 8000642:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000644:	e026      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOF)
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	4a1b      	ldr	r2, [pc, #108]	@ (80006b8 <GPIO_PeriClockControl+0x1b0>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d106      	bne.n	800065c <GPIO_PeriClockControl+0x154>
			GPIOF_PCLK_DI();
 800064e:	4b15      	ldr	r3, [pc, #84]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000652:	4a14      	ldr	r2, [pc, #80]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000654:	f023 0320 	bic.w	r3, r3, #32
 8000658:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800065a:	e01b      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOG)
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	4a17      	ldr	r2, [pc, #92]	@ (80006bc <GPIO_PeriClockControl+0x1b4>)
 8000660:	4293      	cmp	r3, r2
 8000662:	d106      	bne.n	8000672 <GPIO_PeriClockControl+0x16a>
			GPIOG_PCLK_DI();
 8000664:	4b0f      	ldr	r3, [pc, #60]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000666:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000668:	4a0e      	ldr	r2, [pc, #56]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800066a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800066e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000670:	e010      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
		else if(pGPIOx == GPIOH)
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	4a12      	ldr	r2, [pc, #72]	@ (80006c0 <GPIO_PeriClockControl+0x1b8>)
 8000676:	4293      	cmp	r3, r2
 8000678:	d106      	bne.n	8000688 <GPIO_PeriClockControl+0x180>
			GPIOH_PCLK_DI();
 800067a:	4b0a      	ldr	r3, [pc, #40]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800067c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800067e:	4a09      	ldr	r2, [pc, #36]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 8000680:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000684:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000686:	e005      	b.n	8000694 <GPIO_PeriClockControl+0x18c>
			GPIOI_PCLK_DI();
 8000688:	4b06      	ldr	r3, [pc, #24]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800068a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800068c:	4a05      	ldr	r2, [pc, #20]	@ (80006a4 <GPIO_PeriClockControl+0x19c>)
 800068e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000692:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000694:	bf00      	nop
 8000696:	370c      	adds	r7, #12
 8000698:	46bd      	mov	sp, r7
 800069a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800069e:	4770      	bx	lr
 80006a0:	40020000 	.word	0x40020000
 80006a4:	40023800 	.word	0x40023800
 80006a8:	40020400 	.word	0x40020400
 80006ac:	40020800 	.word	0x40020800
 80006b0:	40020c00 	.word	0x40020c00
 80006b4:	40021000 	.word	0x40021000
 80006b8:	40021400 	.word	0x40021400
 80006bc:	40021800 	.word	0x40021800
 80006c0:	40021c00 	.word	0x40021c00

080006c4 <GPIO_WriteToOutputPin>:
 * @return			- void
 *
 * @notes			-
 *****************************************************************************/
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80006c4:	b480      	push	{r7}
 80006c6:	b083      	sub	sp, #12
 80006c8:	af00      	add	r7, sp, #0
 80006ca:	6078      	str	r0, [r7, #4]
 80006cc:	460b      	mov	r3, r1
 80006ce:	70fb      	strb	r3, [r7, #3]
 80006d0:	4613      	mov	r3, r2
 80006d2:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 80006d4:	78bb      	ldrb	r3, [r7, #2]
 80006d6:	2b01      	cmp	r3, #1
 80006d8:	d109      	bne.n	80006ee <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= (1 << PinNumber);
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	695b      	ldr	r3, [r3, #20]
 80006de:	78fa      	ldrb	r2, [r7, #3]
 80006e0:	2101      	movs	r1, #1
 80006e2:	fa01 f202 	lsl.w	r2, r1, r2
 80006e6:	431a      	orrs	r2, r3
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	615a      	str	r2, [r3, #20]
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR &= ~(1 << PinNumber);
	}

}
 80006ec:	e009      	b.n	8000702 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	695b      	ldr	r3, [r3, #20]
 80006f2:	78fa      	ldrb	r2, [r7, #3]
 80006f4:	2101      	movs	r1, #1
 80006f6:	fa01 f202 	lsl.w	r2, r1, r2
 80006fa:	43d2      	mvns	r2, r2
 80006fc:	401a      	ands	r2, r3
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	615a      	str	r2, [r3, #20]
}
 8000702:	bf00      	nop
 8000704:	370c      	adds	r7, #12
 8000706:	46bd      	mov	sp, r7
 8000708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070c:	4770      	bx	lr
	...

08000710 <delay>:
#include "stm32f407xx.h"

int g_counter = 150000;

void delay(void)
{
 8000710:	b480      	push	{r7}
 8000712:	b083      	sub	sp, #12
 8000714:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < g_counter; i++);
 8000716:	2300      	movs	r3, #0
 8000718:	607b      	str	r3, [r7, #4]
 800071a:	e002      	b.n	8000722 <delay+0x12>
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	3301      	adds	r3, #1
 8000720:	607b      	str	r3, [r7, #4]
 8000722:	4b06      	ldr	r3, [pc, #24]	@ (800073c <delay+0x2c>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	461a      	mov	r2, r3
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	4293      	cmp	r3, r2
 800072c:	d3f6      	bcc.n	800071c <delay+0xc>
}
 800072e:	bf00      	nop
 8000730:	bf00      	nop
 8000732:	370c      	adds	r7, #12
 8000734:	46bd      	mov	sp, r7
 8000736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800073a:	4770      	bx	lr
 800073c:	20000000 	.word	0x20000000

08000740 <main>:




int main()
{
 8000740:	b580      	push	{r7, lr}
 8000742:	b08c      	sub	sp, #48	@ 0x30
 8000744:	af00      	add	r7, sp, #0


	/**
	 * GPIO led green config structure
	 */
	GPIO_Led_Green.pGPIOx = GPIOD;
 8000746:	4b46      	ldr	r3, [pc, #280]	@ (8000860 <main+0x120>)
 8000748:	61bb      	str	r3, [r7, #24]
	GPIO_Led_Green.GPIO_PinConfig.GPIO_PinNumber = 12;
 800074a:	230c      	movs	r3, #12
 800074c:	773b      	strb	r3, [r7, #28]
	//alternate function is not necessary
	GPIO_Led_Green.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800074e:	2301      	movs	r3, #1
 8000750:	777b      	strb	r3, [r7, #29]
	GPIO_Led_Green.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000752:	2302      	movs	r3, #2
 8000754:	77bb      	strb	r3, [r7, #30]
	GPIO_Led_Green.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000756:	2300      	movs	r3, #0
 8000758:	f887 3020 	strb.w	r3, [r7, #32]
	GPIO_Led_Green.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800075c:	2300      	movs	r3, #0
 800075e:	77fb      	strb	r3, [r7, #31]

	/*
	 * GPIO led orange config structure
	 */
	GPIO_Led_Orange.pGPIOx = GPIOD;
 8000760:	4b3f      	ldr	r3, [pc, #252]	@ (8000860 <main+0x120>)
 8000762:	627b      	str	r3, [r7, #36]	@ 0x24
	GPIO_Led_Orange.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000764:	230d      	movs	r3, #13
 8000766:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	//alternate function is not necessary
	GPIO_Led_Orange.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800076a:	2301      	movs	r3, #1
 800076c:	f887 3029 	strb.w	r3, [r7, #41]	@ 0x29
	GPIO_Led_Orange.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000770:	2302      	movs	r3, #2
 8000772:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
	GPIO_Led_Orange.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000776:	2300      	movs	r3, #0
 8000778:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
	GPIO_Led_Orange.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800077c:	2300      	movs	r3, #0
 800077e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b

	/*
	 * GPIO led red config structure
	 */
	GPIO_Led_Red.pGPIOx = GPIOD;
 8000782:	4b37      	ldr	r3, [pc, #220]	@ (8000860 <main+0x120>)
 8000784:	60fb      	str	r3, [r7, #12]
	GPIO_Led_Red.GPIO_PinConfig.GPIO_PinNumber = 14;
 8000786:	230e      	movs	r3, #14
 8000788:	743b      	strb	r3, [r7, #16]
	//alternate function is not necessary
	GPIO_Led_Red.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800078a:	2301      	movs	r3, #1
 800078c:	747b      	strb	r3, [r7, #17]
	GPIO_Led_Red.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800078e:	2302      	movs	r3, #2
 8000790:	74bb      	strb	r3, [r7, #18]
	GPIO_Led_Red.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000792:	2300      	movs	r3, #0
 8000794:	753b      	strb	r3, [r7, #20]
	GPIO_Led_Red.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000796:	2300      	movs	r3, #0
 8000798:	74fb      	strb	r3, [r7, #19]


	/*
	 * GPIO led blue config structure
	 */
	GPIO_Led_Blue.pGPIOx = GPIOD;
 800079a:	4b31      	ldr	r3, [pc, #196]	@ (8000860 <main+0x120>)
 800079c:	603b      	str	r3, [r7, #0]
	GPIO_Led_Blue.GPIO_PinConfig.GPIO_PinNumber = 15;
 800079e:	230f      	movs	r3, #15
 80007a0:	713b      	strb	r3, [r7, #4]
	//alternate function is not necessary
	GPIO_Led_Blue.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80007a2:	2301      	movs	r3, #1
 80007a4:	717b      	strb	r3, [r7, #5]
	GPIO_Led_Blue.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80007a6:	2302      	movs	r3, #2
 80007a8:	71bb      	strb	r3, [r7, #6]
	GPIO_Led_Blue.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80007aa:	2300      	movs	r3, #0
 80007ac:	723b      	strb	r3, [r7, #8]
	GPIO_Led_Blue.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80007ae:	2300      	movs	r3, #0
 80007b0:	71fb      	strb	r3, [r7, #7]


	GPIO_PeriClockControl(GPIOD, ENABLE);
 80007b2:	2101      	movs	r1, #1
 80007b4:	482a      	ldr	r0, [pc, #168]	@ (8000860 <main+0x120>)
 80007b6:	f7ff fea7 	bl	8000508 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Led_Orange);
 80007ba:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80007be:	4618      	mov	r0, r3
 80007c0:	f7ff fd02 	bl	80001c8 <GPIO_Init>
	GPIO_Init(&GPIO_Led_Green);
 80007c4:	f107 0318 	add.w	r3, r7, #24
 80007c8:	4618      	mov	r0, r3
 80007ca:	f7ff fcfd 	bl	80001c8 <GPIO_Init>
	GPIO_Init(&GPIO_Led_Red);
 80007ce:	f107 030c 	add.w	r3, r7, #12
 80007d2:	4618      	mov	r0, r3
 80007d4:	f7ff fcf8 	bl	80001c8 <GPIO_Init>
	GPIO_Init(&GPIO_Led_Blue);
 80007d8:	463b      	mov	r3, r7
 80007da:	4618      	mov	r0, r3
 80007dc:	f7ff fcf4 	bl	80001c8 <GPIO_Init>

	while(1)
	{
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, SET);
 80007e0:	2201      	movs	r2, #1
 80007e2:	210d      	movs	r1, #13
 80007e4:	481e      	ldr	r0, [pc, #120]	@ (8000860 <main+0x120>)
 80007e6:	f7ff ff6d 	bl	80006c4 <GPIO_WriteToOutputPin>
		delay();
 80007ea:	f7ff ff91 	bl	8000710 <delay>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, RESET);
 80007ee:	2200      	movs	r2, #0
 80007f0:	210d      	movs	r1, #13
 80007f2:	481b      	ldr	r0, [pc, #108]	@ (8000860 <main+0x120>)
 80007f4:	f7ff ff66 	bl	80006c4 <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, SET);
 80007f8:	2201      	movs	r2, #1
 80007fa:	210c      	movs	r1, #12
 80007fc:	4818      	ldr	r0, [pc, #96]	@ (8000860 <main+0x120>)
 80007fe:	f7ff ff61 	bl	80006c4 <GPIO_WriteToOutputPin>
		delay();
 8000802:	f7ff ff85 	bl	8000710 <delay>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, RESET);
 8000806:	2200      	movs	r2, #0
 8000808:	210c      	movs	r1, #12
 800080a:	4815      	ldr	r0, [pc, #84]	@ (8000860 <main+0x120>)
 800080c:	f7ff ff5a 	bl	80006c4 <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15, SET);
 8000810:	2201      	movs	r2, #1
 8000812:	210f      	movs	r1, #15
 8000814:	4812      	ldr	r0, [pc, #72]	@ (8000860 <main+0x120>)
 8000816:	f7ff ff55 	bl	80006c4 <GPIO_WriteToOutputPin>
		delay();
 800081a:	f7ff ff79 	bl	8000710 <delay>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15, RESET);
 800081e:	2200      	movs	r2, #0
 8000820:	210f      	movs	r1, #15
 8000822:	480f      	ldr	r0, [pc, #60]	@ (8000860 <main+0x120>)
 8000824:	f7ff ff4e 	bl	80006c4 <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_14, SET);
 8000828:	2201      	movs	r2, #1
 800082a:	210e      	movs	r1, #14
 800082c:	480c      	ldr	r0, [pc, #48]	@ (8000860 <main+0x120>)
 800082e:	f7ff ff49 	bl	80006c4 <GPIO_WriteToOutputPin>
		delay();
 8000832:	f7ff ff6d 	bl	8000710 <delay>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_14, RESET);
 8000836:	2200      	movs	r2, #0
 8000838:	210e      	movs	r1, #14
 800083a:	4809      	ldr	r0, [pc, #36]	@ (8000860 <main+0x120>)
 800083c:	f7ff ff42 	bl	80006c4 <GPIO_WriteToOutputPin>


		g_counter = g_counter - 5000;
 8000840:	4b08      	ldr	r3, [pc, #32]	@ (8000864 <main+0x124>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	f5a3 539c 	sub.w	r3, r3, #4992	@ 0x1380
 8000848:	3b08      	subs	r3, #8
 800084a:	4a06      	ldr	r2, [pc, #24]	@ (8000864 <main+0x124>)
 800084c:	6013      	str	r3, [r2, #0]

		if(g_counter <= 0)
 800084e:	4b05      	ldr	r3, [pc, #20]	@ (8000864 <main+0x124>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	2b00      	cmp	r3, #0
 8000854:	dcc4      	bgt.n	80007e0 <main+0xa0>
		{
			g_counter = 500000;
 8000856:	4b03      	ldr	r3, [pc, #12]	@ (8000864 <main+0x124>)
 8000858:	4a03      	ldr	r2, [pc, #12]	@ (8000868 <main+0x128>)
 800085a:	601a      	str	r2, [r3, #0]
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, SET);
 800085c:	e7c0      	b.n	80007e0 <main+0xa0>
 800085e:	bf00      	nop
 8000860:	40020c00 	.word	0x40020c00
 8000864:	20000000 	.word	0x20000000
 8000868:	0007a120 	.word	0x0007a120

0800086c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800086c:	480d      	ldr	r0, [pc, #52]	@ (80008a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800086e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000870:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000874:	480c      	ldr	r0, [pc, #48]	@ (80008a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000876:	490d      	ldr	r1, [pc, #52]	@ (80008ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000878:	4a0d      	ldr	r2, [pc, #52]	@ (80008b0 <LoopForever+0xe>)
  movs r3, #0
 800087a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800087c:	e002      	b.n	8000884 <LoopCopyDataInit>

0800087e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800087e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000880:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000882:	3304      	adds	r3, #4

08000884 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000884:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000886:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000888:	d3f9      	bcc.n	800087e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800088a:	4a0a      	ldr	r2, [pc, #40]	@ (80008b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800088c:	4c0a      	ldr	r4, [pc, #40]	@ (80008b8 <LoopForever+0x16>)
  movs r3, #0
 800088e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000890:	e001      	b.n	8000896 <LoopFillZerobss>

08000892 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000892:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000894:	3204      	adds	r2, #4

08000896 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000896:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000898:	d3fb      	bcc.n	8000892 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800089a:	f000 f811 	bl	80008c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800089e:	f7ff ff4f 	bl	8000740 <main>

080008a2 <LoopForever>:

LoopForever:
  b LoopForever
 80008a2:	e7fe      	b.n	80008a2 <LoopForever>
  ldr   r0, =_estack
 80008a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80008a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008ac:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80008b0:	08000928 	.word	0x08000928
  ldr r2, =_sbss
 80008b4:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80008b8:	20000020 	.word	0x20000020

080008bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008bc:	e7fe      	b.n	80008bc <ADC_IRQHandler>
	...

080008c0 <__libc_init_array>:
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	4d0d      	ldr	r5, [pc, #52]	@ (80008f8 <__libc_init_array+0x38>)
 80008c4:	4c0d      	ldr	r4, [pc, #52]	@ (80008fc <__libc_init_array+0x3c>)
 80008c6:	1b64      	subs	r4, r4, r5
 80008c8:	10a4      	asrs	r4, r4, #2
 80008ca:	2600      	movs	r6, #0
 80008cc:	42a6      	cmp	r6, r4
 80008ce:	d109      	bne.n	80008e4 <__libc_init_array+0x24>
 80008d0:	4d0b      	ldr	r5, [pc, #44]	@ (8000900 <__libc_init_array+0x40>)
 80008d2:	4c0c      	ldr	r4, [pc, #48]	@ (8000904 <__libc_init_array+0x44>)
 80008d4:	f000 f818 	bl	8000908 <_init>
 80008d8:	1b64      	subs	r4, r4, r5
 80008da:	10a4      	asrs	r4, r4, #2
 80008dc:	2600      	movs	r6, #0
 80008de:	42a6      	cmp	r6, r4
 80008e0:	d105      	bne.n	80008ee <__libc_init_array+0x2e>
 80008e2:	bd70      	pop	{r4, r5, r6, pc}
 80008e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80008e8:	4798      	blx	r3
 80008ea:	3601      	adds	r6, #1
 80008ec:	e7ee      	b.n	80008cc <__libc_init_array+0xc>
 80008ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80008f2:	4798      	blx	r3
 80008f4:	3601      	adds	r6, #1
 80008f6:	e7f2      	b.n	80008de <__libc_init_array+0x1e>
 80008f8:	08000920 	.word	0x08000920
 80008fc:	08000920 	.word	0x08000920
 8000900:	08000920 	.word	0x08000920
 8000904:	08000924 	.word	0x08000924

08000908 <_init>:
 8000908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800090a:	bf00      	nop
 800090c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800090e:	bc08      	pop	{r3}
 8000910:	469e      	mov	lr, r3
 8000912:	4770      	bx	lr

08000914 <_fini>:
 8000914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000916:	bf00      	nop
 8000918:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800091a:	bc08      	pop	{r3}
 800091c:	469e      	mov	lr, r3
 800091e:	4770      	bx	lr
